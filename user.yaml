- name: user
  hosts: user
  become: yes
  tasks:
    - name: run commands
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

    - name: install nodejs
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: create user
      ansible.builtin.user:
        name: roboshop

    - name: create directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download user application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp
   
    - name: unarchive user application
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app
        remote_src: yes 

    - name: install dependencies
      ansible.builtin.command: npm install 
      args:
        chdir: /app

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service  

    - name: reload user service
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: copy mongo repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongodb client
      ansible.builtin.package:
        name: mongodb-org-shell
        state: present
      
    - name: get the users count
      ansible.builtin.command:  mongo --host mongodb.daws76s.online --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
      register: user_count
    
    - name: print the count
      ansible.builtin.debug:
        msg: "user count: {{user_count}}"

    - name: load user data
      ansible.builtin.command: mongo --host mongodb.daws76s.online < /app/schema/user.js
      when: user_count.stdout == "0" # keep double quotes

    - name: start and enable user
      ansible.builtin.service:
        name: user
        state: restarted
        enabled: yes

   







       

